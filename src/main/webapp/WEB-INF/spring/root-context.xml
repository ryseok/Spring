<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">


	<!--AOP의 Before,After,Around사용을 위해 설정 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<!-- 트랜잭션 설정 -->
	<bean
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		id="transactionManger">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url"
			value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="scott"></property>
		<property name="password" value="tiger"></property>
	</bean>

	<bean class="org.mybatis.spring.SqlSessionFactoryBean"
		id="sqlSessionFactory">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation"
			value="classpath:/mybatis-config.xml"></property>
		<!-- sql문 작성된 mapperXML문서 등록 -->
		<property name="mapperLocations"
			value="classpath:mappers/*.xml"></property>
	</bean>

	<!-- XML내에 작성된 sql문을 호출하는 SqlSession객체 생성 -->
	<bean class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory"
			ref="sqlSessionFactory"></constructor-arg>
	</bean>

	<!-- DB관련클래스 등록(DAO==>Repository객체) -->
	<context:component-scan
		base-package="com.encore.persistence"></context:component-scan>
	<context:component-scan
		base-package="com.encore.persistence.test"></context:component-scan>

	<!-- Service등록 -->
	<context:component-scan
		base-package="com.encore.service"></context:component-scan>
	<context:component-scan
		base-package="com.encore.service.test"></context:component-scan>

	<!--AOP : 공통 관심사항 코드 등록 -->
	<context:component-scan
		base-package="com.encore.aop"></context:component-scan>
	<context:component-scan
		base-package="com.encore.aop.test"></context:component-scan>

	<!-- 메일 보내기 -->
	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" /> <!-- smtp 서버명 -->
		<property name="port" value="587" /> <!-- 포트 번호 -->
		<property name="username" value="@gmail.com" /> <!-- id(일반적인 id가 아니니 확인 필요) -->
		<property name="password" value="" /> <!-- 비밀번호 -->
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>
</beans>
